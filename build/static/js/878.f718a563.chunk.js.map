{"version":3,"file":"static/js/878.f718a563.chunk.js","mappings":"oLAiCA,IA3BA,YAA4B,IAAZA,EAAW,EAAXA,SAUd,OACE,kBAAMA,SAVR,SAAsBC,GACpBA,EAAMC,iBACN,MAA6BD,EAAME,OAAOC,SAAnCC,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,SAEjBN,EAAS,CACPK,SAAUA,EAASE,MACnBD,SAAUA,EAASC,SAIrB,WACE,4BACE,kBAAOC,QAAQ,iBAAf,uBACA,kBAAOC,GAAG,iBAAiBC,KAAK,WAAWC,KAAK,aAElD,4BACE,kBAAOH,QAAQ,iBAAf,uBACA,kBAAOC,GAAG,iBAAiBC,KAAK,WAAWC,KAAK,iBAElD,0BACE,mBAAQA,KAAK,SAAb,2B,0CCdR,IATA,WACE,OACE,iBAAKC,UAAU,aAAa,aAAW,aAAvC,WACE,oBACA,wB,0ICIN,SAASC,EAAsBC,EAAOC,GACpC,OAAQA,EAAOJ,MACb,IAAK,QACH,MAAO,CAACK,OAAQ,UAAWC,aAAc,KAAMC,aAAc,MAE/D,IAAK,UACH,MAAO,CACLF,OAAQ,WACRC,aAAcF,EAAOE,aACrBC,aAAc,MAGlB,IAAK,SACH,MAAO,CACLF,OAAQ,WACRC,aAAc,KACdC,aAAcH,EAAOI,MAAMC,SAG/B,QACE,MAAM,IAAIC,MAAJ,4BAA+BN,EAAOJ,QAkElD,MA5BA,WACE,MAAgCW,EAAAA,SAAe,MAA/C,eAAOC,EAAP,KAAiBC,EAAjB,KACA,EApCF,YAA8C,IAAlBC,EAAiB,EAAjBA,SAAUC,EAAO,EAAPA,KACpC,EAA0BJ,EAAAA,WAAiBT,EAAuB,CAChEG,OAAQ,OACRC,aAAc,KACdC,aAAc,OAHhB,eAAOJ,EAAP,KAAca,EAAd,KAMMC,EAAYF,EAAOG,KAAKC,UAAUJ,GAAQ,KAwBhD,OAtBAJ,EAAAA,WAAgB,WACVM,IACFD,EAAS,CAAChB,KAAM,UAChBoB,OACGC,MAAMP,EAAU,CACfQ,OAAQ,OACRC,KAAMN,EACNO,QAAS,CACP,eAAgB,sBAGnBC,KARH,yCAQQ,WAAMC,GAAN,4FACeA,EAASC,OADxB,OACEZ,EADF,OAEAW,EAASE,GACXZ,EAAS,CAAChB,KAAM,UAAWM,aAAcS,IAEzCC,EAAS,CAAChB,KAAM,SAAUQ,MAAOO,IAL/B,2CARR,0DAiBD,CAACE,EAAWH,IAERX,EAKsC0B,CAAkB,CAC7Df,SAAU,8CACVC,KAAMH,IAFDP,EAAP,EAAOA,OAAQC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAK7B,OACE,gCACc,aAAXF,GACC,uCACU,4BAASC,EAAaZ,eAGhC,SAAC,IAAD,CAAOL,SAAU,SAAA0B,GAAI,OAAIF,EAAYE,OAEvC,iBAAKe,MAAO,CAACC,OAAQ,KAArB,UACc,YAAX1B,GAAuB,SAAC,IAAD,IAAc,KAC1B,aAAXA,GACC,gBAAK2B,KAAK,QAAQF,MAAO,CAACG,MAAO,OAAjC,SACG1B,IAED,YC3FZ","sources":["components/login.js","components/spinner.js","components/login-submission.js","examples/login-submission.js"],"sourcesContent":["// http://localhost:3000/login\n// this renders a login UI and calls the onSubmit handler with the username\n// and password when the user submits the form.\n\nimport * as React from 'react'\n\nfunction Login({onSubmit}) {\n  function handleSubmit(event) {\n    event.preventDefault()\n    const {username, password} = event.target.elements\n\n    onSubmit({\n      username: username.value,\n      password: password.value,\n    })\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"username-field\">Username</label>\n        <input id=\"username-field\" name=\"username\" type=\"text\" />\n      </div>\n      <div>\n        <label htmlFor=\"password-field\">Password</label>\n        <input id=\"password-field\" name=\"password\" type=\"password\" />\n      </div>\n      <div>\n        <button type=\"submit\">Submit</button>\n      </div>\n    </form>\n  )\n}\n\nexport default Login\n","// http://localhost:3000/spinner\n\nimport * as React from 'react'\n\nfunction Spinner() {\n  return (\n    <div className=\"lds-ripple\" aria-label=\"loading...\">\n      <div />\n      <div />\n    </div>\n  )\n}\n\nexport default Spinner\n","// http://localhost:3000/login-submission\n//\n// The <LoginSubmission /> component uses our <Login /> component and actually\n// submits the formData to /api/login and redirects the user or shows an error\n// message if the request failed.\n//\n// ðŸš¨  You can see a failure by not providing a username or password\n\nimport * as React from 'react'\nimport Login from './login'\nimport Spinner from './spinner'\n\nfunction formSubmissionReducer(state, action) {\n  switch (action.type) {\n    case 'START': {\n      return {status: 'pending', responseData: null, errorMessage: null}\n    }\n    case 'RESOLVE': {\n      return {\n        status: 'resolved',\n        responseData: action.responseData,\n        errorMessage: null,\n      }\n    }\n    case 'REJECT': {\n      return {\n        status: 'rejected',\n        responseData: null,\n        errorMessage: action.error.message,\n      }\n    }\n    default:\n      throw new Error(`Unsupported type: ${action.type}`)\n  }\n}\n\nfunction useFormSubmission({endpoint, data}) {\n  const [state, dispatch] = React.useReducer(formSubmissionReducer, {\n    status: 'idle',\n    responseData: null,\n    errorMessage: null,\n  })\n\n  const fetchBody = data ? JSON.stringify(data) : null\n\n  React.useEffect(() => {\n    if (fetchBody) {\n      dispatch({type: 'START'})\n      window\n        .fetch(endpoint, {\n          method: 'POST',\n          body: fetchBody,\n          headers: {\n            'content-type': 'application/json',\n          },\n        })\n        .then(async response => {\n          const data = await response.json()\n          if (response.ok) {\n            dispatch({type: 'RESOLVE', responseData: data})\n          } else {\n            dispatch({type: 'REJECT', error: data})\n          }\n        })\n    }\n  }, [fetchBody, endpoint])\n\n  return state\n}\n\nfunction LoginSubmission() {\n  const [formData, setFormData] = React.useState(null)\n  const {status, responseData, errorMessage} = useFormSubmission({\n    endpoint: 'https://auth-provider.example.com/api/login',\n    data: formData,\n  })\n\n  return (\n    <>\n      {status === 'resolved' ? (\n        <div>\n          Welcome <strong>{responseData.username}</strong>\n        </div>\n      ) : (\n        <Login onSubmit={data => setFormData(data)} />\n      )}\n      <div style={{height: 200}}>\n        {status === 'pending' ? <Spinner /> : null}\n        {status === 'rejected' ? (\n          <div role=\"alert\" style={{color: 'red'}}>\n            {errorMessage}\n          </div>\n        ) : null}\n      </div>\n    </>\n  )\n}\n\nexport default LoginSubmission\n","import LoginSubmission from '../components/login-submission'\nexport default LoginSubmission\n"],"names":["onSubmit","event","preventDefault","target","elements","username","password","value","htmlFor","id","name","type","className","formSubmissionReducer","state","action","status","responseData","errorMessage","error","message","Error","React","formData","setFormData","endpoint","data","dispatch","fetchBody","JSON","stringify","window","fetch","method","body","headers","then","response","json","ok","useFormSubmission","style","height","role","color"],"sourceRoot":""}